{"version":3,"sources":["components/Loader/Loader.tsx","components/PeopleInfo.tsx","components/PeoplePage.tsx","components/NotFound.tsx","App.tsx","index.tsx"],"names":["Loader","className","PeopleInfo","user","name","sex","born","died","fatherName","motherName","PeoplePage","useState","usersFromServer","setUsersFromServer","isError","setIsError","useEffect","fetch","then","res","json","catch","Response","Error","title","map","slug","NotFound","App","to","style","color","isActive","path","element","ReactDOM","render","document","getElementById"],"mappings":"qQAGaA,EAAmB,kBAC9B,qBAAKC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCENC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACzC,qCACE,6BAAKA,EAAKC,OACV,6BAAKD,EAAKE,MACV,6BAAKF,EAAKG,OACV,6BAAKH,EAAKI,OACV,6BAAKJ,EAAKK,aACV,6BAAKL,EAAKM,iBCEDC,EAAuB,WAClC,MAA8CC,mBAAwB,MAAtE,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,qBAAU,WAbRC,MAAM,qEACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uBAUCL,MAAK,SAAAC,GACX,UAAWA,GACbJ,EAAW,+BAGbF,EAAmBM,QAEpB,IAEMP,EAGL,wBAAOX,UAAU,uBAAjB,UACE,gCACE,+BACE,sCACA,6BAAI,sBAAMuB,MAAM,MAAZ,mBACJ,6BAAI,sBAAMA,MAAM,OAAZ,oBACJ,6BAAI,sBAAMA,MAAM,OAAZ,oBACJ,6BAAI,sBAAMA,MAAM,aAAZ,2BACJ,6BAAI,sBAAMA,MAAM,aAAZ,gCAGR,gCACIV,EAOE,6BACGA,IAPHF,EAAgBa,KAAI,SAAAtB,GAAI,OACxB,6BACE,cAAC,EAAD,CAAYA,KAAMA,KADXA,EAAKuB,cAhBrB,cAAC,EAAD,KC7BMC,EAAqB,kBAChC,qBAAK1B,UAAU,QAAf,gCC+Da2B,EA3DH,WACV,OACE,sBAAK3B,UAAU,MAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,+BACE,6BACE,cAAC,IAAD,CACE4B,GAAG,IACHC,MAAO,YACL,MAAO,CACLC,MAFqB,EAAfC,SAEY,OAAS,KAJjC,yBAYF,6BACE,cAAC,IAAD,CACEH,GAAG,cACHC,MAAO,YACL,MAAO,CACLC,MAFqB,EAAfC,SAEY,OAAS,KAJjC,gCAeN,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,KAAK,IACLC,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CACED,KAAK,IACLC,QAAS,mBAAGjC,UAAU,QAAb,yBAGX,cAAC,IAAD,CACEgC,KAAK,QACLC,QAAS,cAAC,IAAD,CAAUL,GAAG,QAExB,cAAC,IAAD,CACEI,KAAK,cACLC,QACE,cAAC,EAAD,aCrDZC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7b861f62.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { User } from '../types/People';\n\ntype Props = {\n  user: User\n};\n\nexport const PeopleInfo: React.FC<Props> = ({ user }) => (\n  <>\n    <td>{user.name}</td>\n    <td>{user.sex}</td>\n    <td>{user.born}</td>\n    <td>{user.died}</td>\n    <td>{user.fatherName}</td>\n    <td>{user.motherName}</td>\n  </>\n);\n","import { useEffect, useState } from 'react';\nimport { User } from '../types/People';\nimport { Loader } from './Loader/Loader';\nimport { PeopleInfo } from './PeopleInfo';\n\nconst getPeople = ():Promise<User[]> => {\n  return (\n    fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n      .then(res => res.json())\n      .catch(() => ({\n        Response: 'False',\n        Error: 'unexpected error',\n      }))\n  );\n};\n\nexport const PeoplePage: React.FC = () => {\n  const [usersFromServer, setUsersFromServer] = useState<User[] | null>(null);\n  const [isError, setIsError] = useState('');\n\n  useEffect(() => {\n    getPeople().then(res => {\n      if ('Error' in res) {\n        setIsError('Table data cannot be loaded');\n      }\n\n      setUsersFromServer(res);\n    });\n  }, []);\n\n  return (!usersFromServer\n    ? (<Loader />)\n    : (\n      <table className=\"table containerTable\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th><abbr title=\"sex\">SEX</abbr></th>\n            <th><abbr title=\"born\">BORN</abbr></th>\n            <th><abbr title=\"died\">DIED</abbr></th>\n            <th><abbr title=\"fatherName\">Father name</abbr></th>\n            <th><abbr title=\"motherName\">Mother name</abbr></th>\n          </tr>\n        </thead>\n        <tbody>\n          {!isError\n            ? usersFromServer.map(user => (\n              <tr key={user.slug}>\n                <PeopleInfo user={user} />\n              </tr>\n            ))\n            : (\n              <h1>\n                {isError}\n              </h1>\n            )}\n        </tbody>\n      </table>\n    )\n  );\n};\n","import React from 'react';\n\nexport const NotFound: React.FC = () => (\n  <div className=\"title\">\n    ~ 404 NOT FOUND ~\n  </div>\n\n);\n","import './App.scss';\nimport {\n  Routes, Route, NavLink, Navigate,\n} from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFound } from './components/NotFound';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"tabs is-centered\">\n        <ul>\n          <li>\n            <NavLink\n              to=\"/\"\n              style={({ isActive }) => {\n                return {\n                  color: isActive ? 'blue' : '',\n                };\n              }}\n            >\n              Home Page\n\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/PeoplePage\"\n              style={({ isActive }) => {\n                return {\n                  color: isActive ? 'blue' : '',\n                };\n              }}\n            >\n              People Page\n\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n\n      <Routes>\n        <Route\n          path=\"*\"\n          element={<NotFound />}\n        />\n        <Route\n          path=\"/\"\n          element={<p className=\"title\">Home Page</p>}\n        />\n\n        <Route\n          path=\"/home\"\n          element={<Navigate to=\"/\" />}\n        />\n        <Route\n          path=\"/PeoplePage\"\n          element={\n            <PeoplePage />\n          }\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}